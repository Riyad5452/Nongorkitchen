<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Food Menu with Search</title>
  <style>
    /* Add some CSS for the search bar */
    .search-container {
      text-align: center;
      margin: 20px;
    }
    .search-bar {
      width: 50%;
      padding: 10px;
      font-size: 1.2em;
      border: 1px solid #ffcc00;
      border-radius: 5px;
    }
    /* Existing styles */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    body {
      font-family: Arial, sans-serif;
      background-color: #1d1d1d;
      color: #ffffff;
      padding: 20px;
    }
    .menu-header {
      text-align: center;
      color: #ffcc00;
    }
    .menu-header h1 {
      font-size: 2.5em;
      margin-bottom: 10px;
    }
    .menu-header p {
      font-size: 1.2em;
    }
    .menu-container {
      margin-top: 20px;
    }
    .menu-category {
      margin-bottom: 30px;
    }
    .menu-category-title {
      background-color: #ffcc00;
      color: #1d1d1d;
      padding: 10px;
      font-size: 1.5em;
      text-align: center;
      border-radius: 10px;
    }
    .menu-item-header, .menu-item {
      display: flex;
      justify-content: space-between;
      padding: 10px;
      border-bottom: 1px solid #ffcc00;
    }
    .menu-item-header {
      font-weight: bold;
      background-color: #333333;
      color: #ffcc00;
      border-bottom: 2px solid #ffcc00;
    }
    .menu-item-header div {
      flex: -1;
        display: flex;
      justify-content: space-between;
      width: 200px;
      text-align: center;
    }
    .menu-item {
      background-color: #1d1d1d;
    }
    .menu-item p {
      margin: 0;
    }
    .menu-item .prices {
      display: flex;
      justify-content: space-between;
      width: 200px;
    }
    .menu-item .prices .price1to1, 
    .menu-item .prices .price1to3 {
      color: #ffcc00;
    }
    .menu-item .prices .price-label {
      text-align: center;
      flex: 1;
    }
    .menu-footer {
      margin-top: 30px;
      text-align: center;
    }
    .menu-footer p {
      font-size: 1.2em;
      color: #ffcc00;
    }
    .menu-footer .contact {
      font-size: 1em;
      color: #ffffff;
    }
  </style>
</head>
<body>

  <!-- Search Bar -->
  <div class="search-container">
    <input type="text" id="searchBar" class="search-bar" placeholder="Search for food items or categories...">
  </div>

  <!-- Header Section -->
  <div class="menu-header">
    <h1>FOOD MENU</h1>
    <p>The following is a list of the foods available in our restaurant.</p>
  </div>

  <!-- Menu Container -->
  <div id="menuContainer" class="menu-container"></div>

  <!-- Footer Section -->
  <div class="menu-footer">
    <p>Contact Us: +8801711369638</p>
    <p class="contact">Visit us at: nongorkithcen.netlify.com</p>
  </div>

  <script type="module">
    // Import the Firebase SDK and Firestore
    import { initializeApp } from "https://www.gstatic.com/firebasejs/9.6.1/firebase-app.js";
    import { getFirestore, collection, getDocs } from "https://www.gstatic.com/firebasejs/9.6.1/firebase-firestore.js";

    // Firebase configuration
    const firebaseConfig = {
      apiKey: "AIzaSyB67_Mn3b_2kNvzq3gQv2IbxAqOXb_denA",
      authDomain: "noyonpur-afbda.firebaseapp.com",
      projectId: "noyonpur-afbda",
      storageBucket: "noyonpur-afbda.appspot.com",
      messagingSenderId: "1091403233287",
      appId: "1:1091403233287:web:5cd499bbd0247298a852a2"
    };

    // Initialize Firebase and Firestore
    const app = initializeApp(firebaseConfig);
    const db = getFirestore(app);

    // Fetch menu data from Firebase
    async function loadMenuData() {
      const querySnapshot = await getDocs(collection(db, 'Menu'));
      let menuContainer = document.getElementById('menuContainer');
      let categories = {};

      querySnapshot.forEach(doc => {
        let item = doc.data();
        if (!categories[item.Category]) {
          categories[item.Category] = [];
        }
        categories[item.Category].push(item);
      });

      // Generate HTML for each category and its items
      for (let category in categories) {
        let categoryDiv = document.createElement('div');
        categoryDiv.classList.add('menu-category');
        categoryDiv.setAttribute('data-category', category.toLowerCase());

        let categoryTitle = document.createElement('div');
        categoryTitle.classList.add('menu-category-title');
        categoryTitle.textContent = category;
        categoryDiv.appendChild(categoryTitle);

        let itemHeader = document.createElement('div');
        itemHeader.classList.add('menu-item-header');
        itemHeader.innerHTML = `
          <div>Name</div>
          <div>Price</div>
          <div>Price</div>
        `;
        categoryDiv.appendChild(itemHeader);

        categories[category].forEach(item => {
          let itemDiv = document.createElement('div');
          itemDiv.classList.add('menu-item');
          itemDiv.setAttribute('data-item', item.Item.toLowerCase());

          let itemName = document.createElement('p');
          itemName.textContent = item.Item;

          let pricesDiv = document.createElement('div');
          pricesDiv.classList.add('prices');

          if (item.Price1) {
            const price1to1Label = document.createElement('p');
            price1to1Label.classList.add('price-label', 'price1to1');
            price1to1Label.textContent = `৳${item.Price1}`;
            pricesDiv.appendChild(price1to1Label);
          }

          if (item.Price3) {
            const price1to3Label = document.createElement('p');
            price1to3Label.classList.add('price-label', 'price1to3');
            price1to3Label.textContent = `৳${item.Price3}`;
            pricesDiv.appendChild(price1to3Label);
          }

          itemDiv.appendChild(itemName);
          itemDiv.appendChild(pricesDiv);
          categoryDiv.appendChild(itemDiv);
        });

        menuContainer.appendChild(categoryDiv);
      }
    }

    // Filter the menu items based on the search input
    function searchMenu() {
      let query = document.getElementById('searchBar').value.toLowerCase();
      let categories = document.querySelectorAll('.menu-category');

      categories.forEach(category => {
        let categoryName = category.getAttribute('data-category');
        let items = category.querySelectorAll('.menu-item');
        let categoryHasVisibleItems = false;

        items.forEach(item => {
          let itemName = item.getAttribute('data-item');
          if (itemName.includes(query) || categoryName.includes(query)) {
            item.style.display = 'flex'; // Show matching items
            categoryHasVisibleItems = true;
          } else {
            item.style.display = 'none'; // Hide non-matching items
          }
        });

        if (categoryHasVisibleItems) {
          category.style.display = 'block'; // Show category if any items match
        } else {
          category.style.display = 'none'; // Hide category if no items match
        }
      });
    }

    // Load menu data when the page is loaded
    window.onload = loadMenuData;

    // Add event listener to search bar
    document.getElementById('searchBar').addEventListener('input', searchMenu);
  </script>

</body>
</html>
